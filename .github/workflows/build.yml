name: Build Release

on:
  pull_request:
  push:

jobs:
  build:
    name: Build Binary
    strategy:
      matrix:
        job:
          - { target: x86_64-unknown-linux-musl, exe: x86_64-unknown-linux-musl, os: ubuntu-latest, cross: true }
          - { target: x86_64-unknown-linux-gnu, exe: x86_64-unknown-linux-gnu, os: ubuntu-latest, cross: false }
          - { target: x86_64-apple-darwin, exe: x86_64-apple-darwin, os: macos-latest, cross: true }
          - { target: aarch64-apple-darwin, exe: aarch64-apple-darwin, os: macos-latest, cross: true }
          - { target: x86_64-pc-windows-msvc, exe: x86_64-pc-windows-msvc.exe, os: windows-2019, cross: true }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.job.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.cross }}
          args: --release --target=${{ matrix.job.target }} --locked
          command: build

      - name: Rename
        run: |
          rm target/${{ matrix.job.target }}/release/colmsg.d
          cp target/${{ matrix.job.target }}/release/colmsg* colmsg-${{ matrix.job.exe }}

      - name: Upload release
        uses: actions/upload-artifact@v3
        with:
          name: colmsg
          path: colmsg-${{ matrix.job.exe }}
