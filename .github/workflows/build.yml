name: Build Release

on:
  pull_request:
  push:

jobs:
  build:
    name: Build Binary
    strategy:
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, archive: tar.gz, os: ubuntu-latest, cross: false }
          - { target: x86_64-apple-darwin, archive: tar.gz, os: macos-latest, cross: false }
          - { target: aarch64-apple-darwin, archive: tar.gz, os: macos-latest, cross: false }
          - { target: x86_64-pc-windows-msvc, archive: zip, os: windows-2019, cross: false }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.job.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.cross }}
          args: --release --target=${{ matrix.job.target }} --locked
          command: build

      - name: ZIP Archive for Windows
        if: ${{ matrix.job.target == 'x86_64-pc-windows-msvc' }}
        run: |
          rm target/${{ matrix.job.target }}/release/colmsg.d
          cp target/${{ matrix.job.target }}/release/colmsg* colmsg.exe
          Compress-Archive colmsg.exe colmsg-${{ matrix.job.target }}.${{ matrix.job.archive }}
      - name: TAR Archive for Other OS
        if: ${{ matrix.job.target != 'x86_64-pc-windows-msvc' }}
        run: |
          rm target/${{ matrix.job.target }}/release/colmsg.d
          cp target/${{ matrix.job.target }}/release/colmsg* colmsg
          tar zcf colmsg-${{ matrix.job.target }}.${{ matrix.job.archive }} colmsg
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: colmsg.zip
          path: colmsg-${{ matrix.job.target }}.${{ matrix.job.archive }}
